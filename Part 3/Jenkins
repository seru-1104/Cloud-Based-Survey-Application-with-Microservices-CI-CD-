pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-creds')  // Docker Hub credentials
        GIT_CREDENTIALS = credentials('github-creds')         // GitHub credentials
        KUBECONFIG = credentials('kubeconfig')                // Kubernetes kubeconfig credentials
        dockerImage = ''                                      // Placeholder for the Docker image name
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    // Clone the GitHub repository
                    checkout scm: [
                        $class: 'GitSCM',
                        branches: [[name: '*/main']],
                        userRemoteConfigs: [[
                            credentialsId: 'github-creds',
                            url: 'https://github.com/AKHILNAKKA5/Hw3_repository.git'
                        ]]
                    ]
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Define the Docker image and tag
                    dockerImage = "anakka5/project3-app:${BUILD_NUMBER}"
                    // Build the Docker image
                    sh """
                        cd /var/lib/jenkins/workspace/hw3-pipeline
                        docker build -t ${dockerImage} .
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to Docker Hub and push the Docker image
                    sh """
                        docker login -u ${DOCKER_HUB_CREDENTIALS_USR} -p ${DOCKER_HUB_CREDENTIALS_PSW}
                        docker push ${dockerImage}
                    """
                }
            }
        }

        stage('Update Kubernetes Deployment') {
            steps {
                script {
                    // Replace the placeholder in the deployment.yaml with the actual image tag
                    sh """
                        cd /var/lib/jenkins/workspace/hw3-pipeline
                        sed -i 's|image: anakka5/project3-app:.*|image: ${dockerImage}|' deployment.yaml
                    """
                    // Deploy to Kubernetes using the kubeconfig credentials
                    withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                        sh """
                            kubectl --kubeconfig=$KUBECONFIG apply -f deployment.yaml --validate=false --request-timeout=60s
                            kubectl --kubeconfig=$KUBECONFIG apply -f service.yaml --validate=false --request-timeout=60s
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker images to free up space
            sh "docker rmi ${dockerImage} || true"
            // Clean up workspace
            cleanWs()
        }
    }
}
